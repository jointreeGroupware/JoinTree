<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 회의실 캘린더 예약 mapper -->
<mapper namespace="com.goodee.JoinTree.mapper.MeetRoomReservMapper">
<!-- 캘린더에 보이는 예약 현황 조회 -->
<!-- 	<resultMap id="meetCal" type="com.goodee.JoinTree.vo.Reservation">
		<id column="rev_no" property="revNo"/>
		<result column="equip_no" property="equipNo"/>
		<result column="equip_category" property="equipCategory"/>
		<result column="rev_start_time" property="revStartTime"/>
		<result column="rev_end_time" property="revEndTime"/>
	</resultMap> -->
	
	<!-- 회의실 리스트 (MeetingRoom VO)-->
	<select id="selectMeetRoomAll" parameterType="java.util.Map" resultType="com.goodee.JoinTree.vo.MeetingRoom">
		SELECT
			room_no roomNo,
			equip_category equipCategory,
			room_name roomName,
			room_Capacity roomCapacity,
			room_status roomStatus,
			createdate,
			updatedate,
			create_id createId,
			update_id updateId
		FROM meeting_room
		WHERE equip_category = 'E0101'
		ORDER BY createdate DESC;	
	</select>
	
	<!-- 회의실 별 캘린더(예약현황 조회) 예약완료인 건들만 -->
	<select id="selectMeetCalList" resultType="com.goodee.JoinTree.vo.Reservation">
		SELECT
			r.rev_no revNo,
			r.emp_no empNo,
			r.equip_no equipNo,
			r.equip_category equipCategory,
			r.rev_start_time revStartTime,
			r.rev_end_time revEndTime,
			r.rev_status revStatus,
			r.rev_reason revReason,
			r.createdate,
			r.updatedate,
			r.create_id createId,
			r.update_id updateId,
			m.room_no roomNo
		FROM reservation r
		INNER JOIN meeting_room m ON r.equip_no = m.room_no AND r.equip_category = m.equip_category
		WHERE m.room_no = #{roomNo} AND r.rev_status = 'A0302'
	</select>
	
	<!-- 회의실 예약 하기 -->
	<insert id="insertMeetCal" parameterType="com.goodee.JoinTree.vo.Reservation">
	 	<selectKey order="AFTER" keyProperty="revNo" resultType="int">
	        SELECT last_insert_id()
	    </selectKey>
		INSERT INTO reservation(
			emp_no,
			equip_no,
			equip_category,
			rev_start_time,
			rev_end_time,
			rev_status,
			rev_reason,
			createdate,
			updatedate,
			create_id,
			update_id
		)
		VALUES(
			#{empNo},
			#{equipNo},
			#{equipCategory},
			#{revStartTime},
			#{revEndTime},
			#{revStatus},
			#{revReason},
			NOW(),
	        NOW(),
			#{empNo},
			#{empNo}
		)	
	</insert>
	
	<!-- 사원별 예약 조회 empNo-->
	<select id="selectMeetReserved" parameterType="java.util.Map" resultType="com.goodee.JoinTree.vo.Reservation">
		SELECT
			r.rev_no revNo,
			r.emp_no empNo,
			r.equip_no equipNo,
			r.equip_category equipCategory,
			r.rev_start_time revStartTime,
			r.rev_end_time revEndTime,
			r.rev_status revStatus,
			r.rev_reason revReason,
			r.createdate,
			r.updatedate,
			r.create_id createId,
			r.update_id updateId,
			m.room_name roomName
		FROM reservation r
		INNER JOIN meeting_room m ON r.equip_no = m.room_no AND r.equip_category = m.equip_category
		WHERE r.emp_no = #{empNo} AND r.equip_category = #{equipCategory}
		ORDER BY createdate DESC;
	</select>
	
	<!-- 경영지원팀의 모든 예약 조회 / 관리자가 예약 취소 시켰을 시 update id >> 관리자 id로 보이게-->
	<select id="selectAllMeetReserved" parameterType="java.util.Map" resultType="com.goodee.JoinTree.vo.Reservation">
		SELECT
		    r.rev_no revNo,
		    r.emp_no empNo,
		    e.emp_name empName,
		    r.equip_no equipNo,
		    r.equip_category equipCategory,
		    r.rev_start_time revStartTime,
		    r.rev_end_time revEndTime,
		    r.rev_status revStatus,
		    r.rev_reason revReason,
		    r.createdate,
		    r.updatedate,
		    r.create_id createId,
		    r.update_id updateId,
		    m.room_name roomName
		FROM reservation r
		INNER JOIN meeting_room m ON r.equip_no = m.room_no AND r.equip_category = m.equip_category
		INNER JOIN emp_info e ON r.emp_no = e.emp_no <!-- 사원 이름 -->
		WHERE r.equip_category = #{equipCategory}
		ORDER BY createdate DESC;
	</select>
	
	<!-- 회의실 예약취소(상태만 변경) : 코드 A0303(예약취소) A0304(사용완료)-->
	<update id="updateMeetCal" parameterType="com.goodee.JoinTree.vo.Reservation">
		UPDATE reservation
		SET rev_status = #{revStatus},
		updatedate = NOW(),
		update_id = #{empNo}
		WHERE rev_no = #{revNo};
	</update>
</mapper>