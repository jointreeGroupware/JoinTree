<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.JoinTree.mapper.ProjectMapper">
<!-- 프로젝트 -->
	<!-- 프로젝트 검색별 행의 수  -->
	<select id="projectCountRows" 
			resultType="int">
		SELECT COUNT(*)
		FROM project
		<where>
			<if test="searchName != null and searchName != ''">
				AND (
					project_name LIKE CONCAT('%', #{searchName}, '%')
					OR emp_no IN (SELECT emp_no FROM emp_info WHERE emp_name LIKE CONCAT('%', #{searchName}, '%'))
				)
			</if>
			<if test="startDate != null and startDate != ''">
				AND project_start_date >= #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				AND project_end_date &lt;= #{endDate}
			</if>
		</where>
	</select>
	
	<!-- 프로젝트 전체 리스트 출력  -->
	<select id="selectProejectList"
			resultType="com.goodee.JoinTree.vo.Project">
		SELECT 
			project_no projectNo,
			emp_no empNo,
			project_name projectName,
			project_color projectColor,
			project_start_date projectStartDate, 
			project_end_date projectEndDate,
			project_content projectContent,
			project_status projectStatus,
			createdate,
			updatedate,
			create_id createId,
			update_id updateId
		FROM project
		<where>
			<if test="searchName != null and searchName != ''">
				AND (
					project_name LIKE CONCAT('%', #{searchName}, '%')
					OR emp_no IN (SELECT emp_no FROM emp_info WHERE emp_name LIKE CONCAT('%', #{searchName}, '%'))
				)
			</if>
			<if test="startDate != null and startDate != ''">
				AND project_start_date >= #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				AND project_end_date &lt;= #{endDate}
			</if>
		</where>
		ORDER BY 
				<!-- 생성일 -->
				createdate DESC,
				project_no ASC
		LIMIT #{startRow}, #{rowPerPage}
	</select>
	
	<!-- 프로젝트 개인별 참여 중 프로젝트 출력 -> 자신의 사번이 있고 프로젝트 상태가 진행중인거(A0402)  -->
	<select id="selectProjectListByPersonal"
			resultType="com.goodee.JoinTree.vo.Project">
		SELECT 
			p.project_no projectNo,
			p.emp_no empNo,
			pm.emp_no memberNo,
			p.project_name projectName,
			p.project_color projectColor,
			p.project_start_date projectStartDate, 
			p.project_end_date projectEndDate,
			p.project_content projectContent,
			p.project_status projectStatus,
			p.createdate,
			p.updatedate,
			p.create_id createId,
			p.update_id updateId
		FROM project p
		INNER JOIN project_member pm
		ON p.project_no=pm.project_no
		WHERE 
			pm.emp_no = #{empNo}
			AND
			p.project_status= 'A0401'
			OR
			p.project_status= 'A0402'
			<!-- 타이틀이 있을때 -->
			<if test="searchName != null and searchName != ''">
				AND (
					project_name LIKE CONCAT('%', #{searchName}, '%')
					OR p.emp_no IN (SELECT emp_no FROM emp_info WHERE emp_name LIKE CONCAT('%', #{searchName}, '%'))
				)
			</if>
			<if test="startDate != null and startDate != ''">
				AND project_start_date >= #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				AND project_end_date &lt;= #{endDate}
			</if>
		ORDER BY 
				<!-- 1. 생성일 -> 2. 프로젝트 번호 -->
				p.createdate DESC, 
				p.project_no ASC
		LIMIT #{startRow}, #{rowPerPage}
	</select>
	
	<!-- 프로젝트 종료된 프로젝트 출력 -> 프로젝트 상태가 완료(A0403) -->
	<select id="selectEndProjectList"
			resultType="com.goodee.JoinTree.vo.Project">
		SELECT 
			project_no projectNo,
			emp_no empNo,
			project_name projectName,
			project_color projectColor,
			project_start_date projectStartDate, 
			project_end_date projectEndDate,
			project_content projectContent,
			project_status projectStatus,
			createdate,
			updatedate,
			create_id createId,
			update_id updateId
		FROM project
		WHERE 
			project_status= 'A0403'
			<!-- 타이틀이 있을때 -->
			<if test="searchName != null and searchName != ''">
				AND (
					project_name LIKE CONCAT('%', #{searchName}, '%')
					OR emp_no IN (SELECT emp_no FROM emp_info WHERE emp_name LIKE CONCAT('%', #{searchName}, '%'))
				)
			</if>
			<if test="startDate != null and startDate != ''">
				AND project_start_date >= #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				AND project_end_date &lt;= #{endDate}
			</if>
		ORDER BY 
				createdate DESC, 
				projectNo ASC
		LIMIT #{startRow}, #{rowPerPage}
	</select>
	
	<!-- 홈에서 참여중인 프로젝트 출력 -> 참여중인 프로젝트5개만 -->
	<select id="selectProjectListByHome"
			resultType="com.goodee.JoinTree.vo.Project">
		SELECT 
			p.project_no projectNo,
			p.emp_no empNo,
			e.emp_name empName,
			p.project_name projectName,
			p.project_start_date projectStartDate, 
			p.project_end_date projectEndDate,
			p.project_content projectContent,
			c.code_name projectStatusName,
			p.createdate,
			p.updatedate,
			p.create_id createId,
			p.update_id updateId
		FROM project p
		INNER JOIN project_member pm
		INNER JOIN common_code c
		INNER JOIN emp_info e
		ON 
			p.project_no=pm.project_no 
			AND 
			p.project_status=c.code
			AND 
			p.emp_no=e.emp_no
		WHERE 
			pm.emp_no = #{empNo}
			AND
			p.project_status= 'A0401'
			OR
			p.project_status= 'A0402'
		ORDER BY 
				p.createdate DESC, 
				p.project_no ASC
		LIMIT 0, 5
	</select>

	<!-- 프로젝트 상세보기 -->
	<select id="selectProjectOne"
			resultType="com.goodee.JoinTree.vo.Project">
		SELECT 
			p.project_no projectNo,
			p.emp_no empNo,
			e.emp_name empName,
			p.project_name projectName,
			p.project_color projectColor,
			p.project_start_date projectStartDate, 
			p.project_end_date projectEndDate,
			p.project_content projectContent,
			p.project_status projectStatus,
			p.createdate,
			p.updatedate,
			p.create_id createId,
			p.update_id updateId
		FROM project p
		INNER JOIN emp_info e
		ON p.emp_no = e.emp_no
		WHERE p.project_no = #{projectNo};
	</select>
	
	<!-- 프로젝트 추가 -->
	<insert id="addProject"
			parameterType="com.goodee.JoinTree.vo.Project"
			useGeneratedKeys="true" keyProperty="projectNo" keyColumn="project_no">
		INSERT INTO project(
			emp_no,
			project_name,
			project_color,
			project_start_date,
			project_end_date,
			project_content,
			project_status,
			createdate,
			updatedate,
			create_id,
			update_id
		) VALUES (
			#{empNo},
			#{projectName},
			#{projectColor},
			#{projectStartDate},
			#{projectEndDate},
			#{projectContent},
			'A0401',
			NOW(),
			NOW(),
			#{createId},
			#{updateId}
		);
	</insert>
	
	<!-- 프로젝트 수정 -->
	<update id="modifyProject"
			parameterType="com.goodee.JoinTree.vo.Project">
		UPDATE project
		SET 
			project_name = #{projectName},
			project_content = #{projectContent},
			project_start_date = #{projectStartDate},
			project_end_date = #{projectEndDate},
			updatedate = NOW(),
			update_id = #{updateId}
		WHERE 
			project_no = #{projectNo}
	</update>
	
	<!-- 프로젝트 완료처리 -->
	<update id="endProject"
			parameterType="com.goodee.JoinTree.vo.Project">
		UPDATE project
		SET 
			project_status = 'A0403',
			project_color = '#B7B7B7',
			project_end_date = NOW(),
			updatedate = NOW(),
			update_id = #{updateId}
		WHERE 
			project_no = #{projectNo}
	</update>
	
	<!-- 프로젝트 삭제 -->
	<delete id="removeProject">
		DELETE FROM project
		WHERE 
			project_no = #{projectNo}
	</delete>
<!-- 프로젝트 끝  -->
<!-- 프로젝트 작업  -->
	<!-- 프로젝트 하위작업 카운트 -->
	<select id="projectProgress"
			resultType="com.goodee.JoinTree.vo.ProjectTask">
		SELECT
			COUNT(task_no) totalTasks,
			SUM(task_status = '1') completedTasks,
			ROUND(SUM(task_status = '1') / COUNT(task_no) * 100, 1) progressRate
		FROM project_task
		WHERE 
			project_no = #{projectNo}
		GROUP BY
			project_no;
		
	</select>
	
	<!-- 프로젝트 하위작업 리스트 -->
	<select id="selectProejectTaskList"
			resultType="com.goodee.JoinTree.vo.ProjectTask">
		SELECT
			t.task_no taskNo,
			t.emp_no empNo,
			e.emp_name empName,
			t.task_title taskTitle,
			t.task_content taskContent,
			t.task_start_date taskStartDate,
			t.task_end_date taskEndDate,
			t.task_status taskStatus,
			tf.task_origin_filename taskOriginFilename, 
			tf.task_save_filename taskSaveFilename,
			t.createdate createdate,
			t.updatedate updatedate,
			t.create_id createId,
			t.update_id updateId
		FROM project_task t
		INNER JOIN 
			emp_info e ON t.emp_no = e.emp_no
		LEFT JOIN 
			task_file tf ON tf.task_no = t.task_no
		WHERE 
			t.project_no = #{projectNo}
		ORDER BY
			t.task_status, 
			t.createdate ASC
	</select>
	
	<!-- 프로젝트 하위작업 추가  -->
	<insert id="addProjectTask"
			parameterType="com.goodee.JoinTree.vo.ProjectTask"
			useGeneratedKeys="true" keyProperty="taskNo" keyColumn="task_no">
		INSERT INTO project_task(
			project_no,
			emp_no,
			task_title,
			task_start_date,
			task_end_date,
			task_content,
			task_status,
			createdate,
			updatedate,
			create_id,
			update_id
		) VALUES (
			#{projectNo},
			#{empNo},
			#{taskTitle},
			#{taskStartDate},
			#{taskEndDate},
			#{taskContent},
			'0',
			NOW(),
			NOW(),
			#{createId},
			#{updateId}
		);
	</insert>
	
	<!-- 프로젝트 하위작업 파일 업로드 -->
	<insert id="addTaskFileUpload">
		INSERT INTO task_file (
			task_no,
			task_origin_filename,
			task_save_filename,
			task_filetype,
			task_filesize,
			createdate,
			updatedate,
			create_id,
			update_id
		) VALUES (
			#{taskNo},
			#{taskOriginFilename},
			#{taskSaveFilename},
			#{taskFiletype},
			#{taskFilesize},
			now(),
			now(),
			#{createId},
			#{createId}
		)
	</insert>
	
	<!-- 프로젝트 하위작업 완료처리 -->
	<update id="endProjectTask"
			parameterType="com.goodee.JoinTree.vo.ProjectTask">
		UPDATE project_task
		SET 
			task_status = '1',
			task_end_date = NOW(),
			updatedate = NOW(),
			update_id = #{updateId}
		WHERE 
			task_no = #{taskNo};
	</update>
	
	<!-- 프로젝트 하위작업 삭제  -->
	<delete id="removeProjectTask">
		DELETE FROM project_task
		WHERE 
			project_no = #{projectNo}
			AND 
			task_no = #{taskNo};
	</delete>
<!-- 프로젝트 작업 끝 -->

<!-- 프로젝트 멤버 -->
	<!-- 프로젝트 멤버 수 구하기 -->
	<select id="selectProejectMemberCnt">
		SELECT 
			COUNT(emp_no) empCnt
		FROM project_member
		WHERE project_no = #{projectNo};
	</select>
	
	<!-- 프로젝트 멤버 명단보기-->
	<select id="selectProejectMember"
			resultType="com.goodee.JoinTree.vo.ProjectMember">
		SELECT 
			pm.emp_no empNo,
			e.emp_name empName
		FROM project_member pm
		INNER JOIN emp_info e
		ON 
			pm.emp_no = e.emp_no
		WHERE project_no = #{projectNo};
	</select>
	
	<!-- 프로젝트 멤버 중복검사-->
	<select id="checkDuplicateProjectMember"
			resultType="int">
		SELECT 
			COUNT(emp_no) empCnt
		FROM project_member
		WHERE 
			emp_no = #{empNo}
			AND 
			project_no = #{projectNo};
	</select>
	
	<!--  프로젝트 멤버 추가 -->
	<insert id="addProjectMemeber"
			parameterType="com.goodee.JoinTree.vo.ProjectMember">
		INSERT INTO project_member(
			project_no,
			emp_no,
			createdate,
			updatedate,
			create_id,
			update_id
		) VALUES (
			#{projectNo},
			#{empNo},
			NOW(),
			NOW(),
			#{createId},
			#{updateId}
		)
	</insert>
	
	<!--  프로젝트 멤버 삭제 -->
	<delete id="removeProjectMemeber">
		DELETE FROM project_member
		WHERE 
			emp_no = #{empNo}
			AND 
			project_no = #{projectNo};
	</delete>
<!-- 프로젝트 멤버 끝 -->
</mapper>