<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.JoinTree.mapper.EmpManageMapper">
	
	<!-- 부서 코드 조회 -->
	<select id="selectDeptCodeList" resultType="com.goodee.JoinTree.vo.CommonCode">
		SELECT 
			code,
			code_name codeName
		FROM common_code 
		WHERE up_code = 'D02' AND status = '1'
	</select>
	
	<!-- 직급 코드 조회 -->
	<select id="selectPositionCodeList" resultType="com.goodee.JoinTree.vo.CommonCode">
		SELECT 
			code,
			code_name codeName
		FROM common_code 
		WHERE up_code = 'P01' AND status = '1'
	</select>
	
	<!-- 사원 상태 코드 조회 -->
	<select id="selectActiveCodeList" resultType="com.goodee.JoinTree.vo.CommonCode">
		SELECT 
			code,
			code_name codeName
		FROM common_code 
		WHERE up_code = 'A01' AND status = '1'
	</select>
	
	<!-- 연가 코드 조회 -->
	<select id="selectLeaveCodeList" resultType="com.goodee.JoinTree.vo.CommonCode">
		SELECT 
			code,
			code_name codeName
		FROM common_code 
		WHERE up_code = 'L01' AND status = '1'
	</select>
	
	<!-- 부서별 사원 수 조회 -->
	<select id="selectDeptEmpCnt"
			parameterType="java.util.Map" resultType="int">
		SELECT 
			COUNT(dept) 
		FROM emp_info 
		WHERE dept = #{dept} AND YEAR(emp_hire_date) = #{currentYear}
	</select>
	
	<!-- 재직 사원 수 조회 -->
	<select id="getEmpCnt">
		SELECT 
			COUNT(*) 
		FROM account_list 
		WHERE active != 'A0102'
	</select>
	
	<!-- 사원 등록 -->
	<insert id="addEmpInfo" parameterType="java.util.Map">
		INSERT INTO emp_info (
			emp_no, 
			position, 
			dept, 
			emp_name, 
			emp_address, 
			emp_phone, 
			emp_jumin_no, 
			emp_extension_no, 
			emp_hire_date, 
			emp_last_date, 
			createdate, 
			updatedate, 
			create_id, 
			update_id
			)
		VALUES (
			#{empNo}, 
			#{position}, 
			#{dept}, 
			#{empName}, 
			#{empAddress}, 
			#{empPhone}, 
			#{empJuminNo}, 
			#{empExtensionNo}, 
			#{empHireDate}, 
			NULL, 
			NOW(), 
			NOW(), 
			#{createId}, 
			#{updateId}
		)
	</insert>
	
	<!-- 계정 등록 -->
	<insert id="addAccount" parameterType="com.goodee.JoinTree.vo.AccountList">
		INSERT INTO account_list (
			emp_no, 
			active, 
			emp_pw, 
			createdate, 
			updatedate, 
			create_id, 
			update_id
			)
		VALUES (
			#{empNo}, 
			'A0101', 
			PASSWORD('1234'), 
			NOW(), 
			NOW(), 
			#{createId}, 
			#{updateId}
		)
	</insert>
	
	<!-- 인사이동 이력 등록 -->
	<insert id="addReshuffleHistory" parameterType="com.goodee.JoinTree.vo.ReshuffleHistory">
		INSERT INTO reshuffle_history (
			emp_no,
			depart_no, 
			position,
			depart_before_no,
			position_before_level,
			createdate, 
			updatedate, 
			create_id, 
			update_id
			)
		VALUES (
			#{empNo}, 
			#{departNo}, 
			#{position},
			<choose>
	            <when test="departBeforeNo != null">
	                #{departBeforeNo},
	            </when>
	            <otherwise>
	                NULL,
	            </otherwise>
	        </choose>
	        <choose>
	            <when test="positionBeforeLevel != null">
	                #{positionBeforeLevel},
	            </when>
	            <otherwise>
	                NULL,
	            </otherwise>
	        </choose>
			NOW(), 
			NOW(), 
			#{createId}, 
			#{updateId}
		)
	</insert>
	
	<!-- 사원 목록 조회 -->
	<select id="searchEmpList"
			parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			e.emp_no empNo, 
			e.emp_name empName,
			emp_phone empPhone ,
			emp_extension_no empExtensionNo,
			e.emp_hire_date empHireDate,
			dc.code_name dept,
			pc.code_name position,
			ac.code_name active
		FROM emp_info e LEFT OUTER JOIN account_list a
		ON e.emp_no = a.emp_no
		INNER JOIN common_code ac
		ON a.active = ac.code
		INNER JOIN common_code dc
		ON e.dept = dc.code
		INNER JOIN common_code pc
		ON e.position = pc.code
		WHERE
			1=1
			<if test="empNo !=null and empNo != 0">
		    	AND e.emp_no = #{empNo}
		    </if>
		    <if test="empName != null and empName != ''">
		    	AND e.emp_name = #{empName}
		    </if>
		    <if test="startEmpHireDate != null and endEmpHireDate != null and startEmpHireDate != '' and endEmpHireDate != ''">
		    	AND e.emp_hire_date BETWEEN #{startEmpHireDate} AND #{endEmpHireDate}
		    </if>
		    <if test="dept != null and dept != ''">
		     	AND dc.code = #{dept}
		    </if>
		    <if test="position != null and position != ''">
		    	AND pc.code = #{position}
		    </if>
		    <if test="active !=null and active != ''">
		    	AND ac.code = #{active}
		    </if>  
		ORDER BY e.createdate DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 검색 조건별 행의 수 -->
	<select id="searchEmpListCnt"
			parameterType="java.util.Map" resultType="int">
			
		SELECT COUNT(*)
		FROM emp_info e LEFT OUTER JOIN account_list a
		ON e.emp_no = a.emp_no
		WHERE
			1=1
			<if test="empNo !=null and empNo != 0">
		    	AND e.emp_no = #{empNo}
		    </if>
		    <if test="empName != null and empName != ''">
		    	AND e.emp_name = #{empName}
		    </if>
		    <if test="startEmpHireDate != null and endEmpHireDate != null and startEmpHireDate != '' and endEmpHireDate != ''">
		    	AND e.emp_hire_date BETWEEN #{startEmpHireDate} AND #{endEmpHireDate}
		    </if>
		    <if test="dept != null and dept != ''">
		     	AND e.dept = #{dept}
		    </if>
		    <if test="position != null and position != ''">
		    	AND e.position = #{position}
		    </if>
		    <if test="active !=null and active != ''">
		    	AND a.active = #{active}
		    </if>	
	</select>
	
	<!-- 사원 상세정보 조회 -->
	<select id="selectEmpOne"
			parameterType="int" resultType="java.util.Map">
			
		SELECT 
			e.emp_no empNo,
			e.emp_name empName,
			e.emp_address empAddress,
			e.emp_phone empPhone,
			e.emp_jumin_no empJuminNo,
			e.emp_extension_no empExtensionNo, 
			e.emp_hire_date empHireDate,
			e.emp_last_date empLastDate,
			dc.code_name dept,
			dc.code deptCode,
			pc.code_name position,
			pc.code positionCode,
			ac.code_name active,
			ac.code activeCode,
			ei.emp_save_img_name empSaveImgName
		FROM emp_info e LEFT OUTER JOIN account_list a
		ON e.emp_no = a.emp_no
		LEFT OUTER JOIN emp_info_img ei
		ON e.emp_no = ei.emp_no
		INNER JOIN common_code ac
		ON a.active = ac.code
		INNER JOIN common_code dc
		ON e.dept = dc.code
		INNER JOIN common_code pc
		ON e.position = pc.code
		WHERE e.emp_no = #{empNo}	
	</select>
	
	<!-- 인사이동이력 조회 -->
	<select id="selectReshuffleHistory"
			parameterType="int" resultType="com.goodee.JoinTree.vo.ReshuffleHistory" >
		
		SELECT 
			rh.emp_no empNo, 
			pbc.code_name positionBeforeLevel, 
			pc.code_name position, 
			dc.code_name departNo, 
			dbc.code_name departBeforeNo, 
			rh.createdate createdate
		FROM reshuffle_history rh LEFT OUTER JOIN common_code dc
		ON rh.depart_no = dc.code
		LEFT OUTER JOIN common_code dbc
		ON rh.depart_before_no = dbc.code
		LEFT OUTER JOIN common_code pc
		ON rh.position = pc.code
		LEFT OUTER JOIN common_code pbc
		ON rh.position_before_level = pbc.code
		WHERE emp_no = #{empNo}
		ORDER BY rh.createdate DESC 
	</select>
	
	<!-- 사원 활성화 수정 -->
	<update id="modifyEmpActive" parameterType="java.util.Map">
		<![CDATA[
	        UPDATE 
	            account_list 
	        SET  
	            active = #{active},
	            updatedate = NOW(),
	            update_id = #{updateId}
	        WHERE 
	            emp_no = #{empNo}
	            AND active <> #{active}
	    ]]>
	</update>
	
	<!-- 사원 정보 수정 -->
	<update id="modifyEmpInfo" parameterType="java.util.Map">
	    UPDATE
	        emp_info
	    SET
	        dept = #{dept},
	        position = #{position},
	        emp_extension_no = #{empExtensionNo},
	        emp_hire_date = #{empHireDate},
	        emp_last_date =
	    	<choose>
		        <when test="empLastDate != null and empLastDate != ''">
		            #{empLastDate},
		        </when>
		        <otherwise>
		            emp_last_date,
		        </otherwise>
		    </choose>
	    <![CDATA[
	        updatedate = NOW(),
	        update_id = #{updateId}
	    WHERE
	        emp_no = #{empNo}
	        AND (
	            dept <> #{dept}
	            OR position <> #{position}
	            OR emp_extension_no <> #{empExtensionNo}
	            OR emp_hire_date <> #{empHireDate}
	            OR emp_last_date <> #{empLastDate}
	        )
	    ]]>
	</update>
</mapper>